<?xml version="1.0"?>
<!--XML-->
    <launch>

    <!-- SETUP ARGUMENTS -->
    <arg name="master_robot_model" default="true"/>
    <!-- Be sure to change this to your cameras serials -->
    <arg name="camera_right_serial" default="31710260"/>
    <arg name="camera_left_serial" default="31710277"/>

    <group if="$(arg master_robot_model)">
        <!-- SETUP ROBOT MODEL -->
        <!-- (robot model should be handelled by master) -->
        <param name="robot_description" command="$(find xacro)/xacro '$(find phobos)/urdf/standalone.urdf.xacro'" />
        <arg name="use_tf_static" default="false"/>
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
            <param name="use_tf_static" value="$(arg use_tf_static)"/>
        </node>
    </group>

    <!-- STEREO <MATCHER> -->
    <group ns="phobos">
        <arg name="fps" value="15"/>
        <arg name="frame_width" value="1920"/>
        <arg name="frame_height" value="1080"/>

        <arg name="exposure_auto" value="false"/>
        <arg name="exposure" value="20000"/>
        <arg name="gain_auto" value="false"/>
        <arg name="gain" value="32"/>

        <arg name="pipeline" value="video/x-raw, format=(string)GRAY8, width=$(arg frame_width), height=$(arg frame_height),framerate=$(arg fps)/1 ! videoconvert --verbose"/>
        
        <!-- Start the GSCAM nodes -->
        <node ns="left" name="phobos_node_left" pkg="gscam" type="gscam" output="screen">
            <param name="camera_name" value="left"/>
            <param name="camera_info_url" value="file:///home/i3dr/.ros/camera_info/left.yaml"/>
            <param name="gscam_config" value="tcamsrc serial=$(arg camera_left_serial) ! $(arg pipeline)"/>
            <param name="frame_id" value="/cameraLeft_optical"/>
            <!-- param name="image_encoding" value="mono8" /-->
            <param name="sync_sink" value="true"/>
        </node>

        <node ns="right" name="phobos_node_right" pkg="gscam" type="gscam" output="screen">
            <param name="camera_name" value="right"/>
            <param name="camera_info_url" value="file:///home/i3dr/.ros/camera_info/right.yaml"/>
            <param name="gscam_config" value="tcamsrc serial=$(arg camera_right_serial) ! $(arg pipeline)"/>
            <param name="frame_id" value="/cameraLeft_optical"/>
            <!-- param name="image_encoding" value="mono8" /-->
            <param name="sync_sink" value="true"/>
        </node>

        <!-- Start the tiscamera control node for each camera -->
        <!-- (optional) set inital camera properties using the parameters [Exposure/Gain/Exposure_Auto/Gain_Auto] -->
        <!-- set camera properties using services from this node
             rosservice call /phobos/left/tiscam_set_exposure_auto -->
        <node ns="left" name="phobos_left_ctrl" pkg="phobos" type="tiscamera_ctrl.py" output="screen">
            <param name="Serial" value="$(arg camera_left_serial)"/>
            <param name="Width" value="$(arg frame_width)"/>
            <param name="Height" value="$(arg frame_height)"/>
            <param name="FPS" value="$(arg fps)"/>
            <param name="Exposure" value="$(arg exposure)"/>
            <param name="Gain" value="$(arg gain)"/>
            <param name="Exposure_Auto" value="$(arg exposure_auto)"/>
            <param name="Gain_Auto" value="$(arg gain_auto)"/>
        </node>

        <node ns="right" name="phobos_right_ctrl" pkg="phobos" type="tiscamera_ctrl.py" output="screen">
            <param name="Serial" value="$(arg camera_right_serial)"/>
            <param name="Width" value="$(arg frame_width)"/>
            <param name="Height" value="$(arg frame_height)"/>
            <param name="FPS" value="$(arg fps)"/>
            <param name="Exposure" value="$(arg exposure)"/>
            <param name="Gain" value="$(arg gain)"/>
            <param name="Exposure_Auto" value="$(arg exposure_auto)"/>
            <param name="Gain_Auto" value="$(arg gain_auto)"/>
        </node>

    </group>

</launch>
